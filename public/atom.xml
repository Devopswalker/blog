<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>四多&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://vmee.top/"/>
  <updated>2018-07-10T16:56:34.000Z</updated>
  <id>http://vmee.top/</id>
  
  <author>
    <name>四多</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Golang 新开发者要注意的陷阱和常见错误【初级篇】</title>
    <link href="http://vmee.top/2018/07/11/gotchas-and-common-mistakes-in-go-golang/"/>
    <id>http://vmee.top/2018/07/11/gotchas-and-common-mistakes-in-go-golang/</id>
    <published>2018-07-10T16:36:34.000Z</published>
    <updated>2018-07-10T16:56:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>原文（EN）：<a href="http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/" target="_blank" rel="noopener">50 Shades of Go: Traps, Gotchas, and Common Mistakes for New Golang Devs</a></p><p>原文（CN）：<a href="http://colobu.com/2015/09/07/gotchas-and-common-mistakes-in-go-golang/" target="_blank" rel="noopener">鸟窝大神博客</a></p><p>本文只涉及其中的初级相关内容，后续深入学习实践后再行归纳总结中级和高级内容。</p><hr><h3 id="1-开（左）大括号不能放在单独的一行"><a href="#1-开（左）大括号不能放在单独的一行" class="headerlink" title="1.开（左）大括号不能放在单独的一行"></a>1.开（左）大括号不能放在单独的一行</h3><p>在大多数其他使用大括号的语言中，你需要选择放置它们的位置。Go 的方式不同，你可以为此感谢下自动分号的注入（没有预读）。是的，Go 中也是有分号的：-）</p><p>错误示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main()</span><br><span class="line">&#123;// error, can&apos;t have the opening brace on a separate line</span><br><span class="line">fmt.Println(&quot;Hello world!&quot;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>编译错误：</p><blockquote><p>./basic.go:43:1: syntax error: unexpected semicolon or newline before {</p></blockquote><p>有效示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;</span><br><span class="line"></span><br><span class="line">fmt.Println(&quot;Hello world!&quot;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="2-未使用的变量"><a href="#2-未使用的变量" class="headerlink" title="2.未使用的变量"></a>2.未使用的变量</h3><p>如果你有未使用的变量，代码将编译失败。当然也有例外。在函数内一定要使用声明的变量，但未使用的全局变量是没问题的。<br>如果你给未使用的变量分配了一个新的值，代码还是会编译失败。你需要在某个地方使用这个变量，才能让编译器愉快的编译。</p><p>错误示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">var gvar int //not an error</span><br><span class="line"></span><br><span class="line">func main() &#123;  </span><br><span class="line">    var one int   //error, unused variable</span><br><span class="line">    two := 2      //error, unused variable</span><br><span class="line">    var three int //error, even though it&apos;s assigned 3 on the next line</span><br><span class="line">    three = 3     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>编译错误：</p><blockquote><p>/tmp/sandbox473116179/main.go:6: one declared and not used<br>/tmp/sandbox473116179/main.go:7: two declared and not used<br>/tmp/sandbox473116179/main.go:8: three declared and not used</p></blockquote><p>有效示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line"></span><br><span class="line">func main() &#123;  </span><br><span class="line">    var one int</span><br><span class="line">    _ = one</span><br><span class="line">    two := 2 </span><br><span class="line">    fmt.Println(two)</span><br><span class="line">    var three int </span><br><span class="line">    three = 3</span><br><span class="line">    one = three</span><br><span class="line">    var four int</span><br><span class="line">    four = four</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>另一个选择是注释掉或者移除未使用的变量 ：-）</p><h3 id="3-未使用的Imports"><a href="#3-未使用的Imports" class="headerlink" title="3.未使用的Imports"></a>3.未使用的Imports</h3><p>如果你引入一个包，而没有使用其中的任何函数、接口、结构体或者变量的话，代码将会编译失败。<br>你可以使用 goimports 来增加引入或者移除未使用的引用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get golang.org/x/tools/cmd/goimports</span><br></pre></td></tr></table></figure></p><p>如果你真的需要引入的包，你可以添加一个下划线标记符，_，来作为这个包的名字，从而避免编译失败。下滑线标记符用于引入，但不使用。</p><p>错误示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (  </span><br><span class="line">    &quot;fmt&quot;</span><br><span class="line">    &quot;log&quot;</span><br><span class="line">    &quot;time&quot;</span><br><span class="line">)</span><br><span class="line">func main() &#123;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>编译错误：</p><blockquote><p>/tmp/sandbox627475386/main.go:4: imported and not used: “fmt”<br>/tmp/sandbox627475386/main.go:5: imported and not used: “log”<br>/tmp/sandbox627475386/main.go:6: imported and not used: “time”</p></blockquote><p>有效示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (  </span><br><span class="line">    _ &quot;fmt&quot;</span><br><span class="line">    &quot;log&quot;</span><br><span class="line">    &quot;time&quot;</span><br><span class="line">)</span><br><span class="line">var _ = log.Println</span><br><span class="line">func main() &#123;  </span><br><span class="line">    _ = time.Now</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>另一个选择是移除或者注释掉未使用的imports ：-）</p><h3 id="4-简式的变量声明仅可以在函数内部使用"><a href="#4-简式的变量声明仅可以在函数内部使用" class="headerlink" title="4.简式的变量声明仅可以在函数内部使用"></a>4.简式的变量声明仅可以在函数内部使用</h3><p>错误示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">myvar := 1 //error</span><br><span class="line"></span><br><span class="line">func main() &#123;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>编译错误：</p><blockquote><p>/tmp/sandbox265716165/main.go:3: non-declaration statement outside function body</p></blockquote><p>有效示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">var myvar = 1</span><br><span class="line"></span><br><span class="line">func main() &#123;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="5-使用简式声明重复声明变量"><a href="#5-使用简式声明重复声明变量" class="headerlink" title="5.使用简式声明重复声明变量"></a>5.使用简式声明重复声明变量</h3><p>你不能在一个单独的声明中重复声明一个变量，但在多变量声明中这是允许的，其中至少要有一个新的声明变量。<br>重复变量需要在相同的代码块内，否则你将得到一个隐藏变量。<br>错误示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">func main() &#123;  </span><br><span class="line">    one := 0</span><br><span class="line">    one := 1 //error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>编译错误：</p><blockquote><p>/tmp/sandbox706333626/main.go:5: no new variables on left side of :=</p></blockquote><p>有效示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">func main() &#123;  </span><br><span class="line">    one := 0</span><br><span class="line">    one, two := 1,2</span><br><span class="line">    one,two = two,one</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原文（EN）：&lt;a href=&quot;http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;50 Shades of Go: 
      
    
    </summary>
    
      <category term="他山之石" scheme="http://vmee.top/categories/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
    
      <category term="100days" scheme="http://vmee.top/tags/100days/"/>
    
      <category term="golang" scheme="http://vmee.top/tags/golang/"/>
    
      <category term="技巧" scheme="http://vmee.top/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="常见错误" scheme="http://vmee.top/tags/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>创世博客之 Hello World</title>
    <link href="http://vmee.top/2018/07/10/creation-hello-world/"/>
    <id>http://vmee.top/2018/07/10/creation-hello-world/</id>
    <published>2018-07-10T15:01:22.000Z</published>
    <updated>2018-07-10T16:56:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="奇淫技巧" scheme="http://vmee.top/categories/%E5%A5%87%E6%B7%AB%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="blog" scheme="http://vmee.top/tags/blog/"/>
    
      <category term="hexo" scheme="http://vmee.top/tags/hexo/"/>
    
      <category term="next" scheme="http://vmee.top/tags/next/"/>
    
  </entry>
  
</feed>
